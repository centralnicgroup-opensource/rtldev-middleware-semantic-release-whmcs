# This workflow handle Push
name: Receive Push
on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
jobs:
  test:
    name: Test @ NodeJS - x86 - ubuntu-latest
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' # ignore pushed brnaches by dependabot
    strategy:
      matrix:
        node-version: [lts/*]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - name: Install dependencies
        run: npm ci
      - name: Linting
        run: npm run lint
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - name: Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_REPO: ${{ secrets.GH_REPO }}
          WHMCSMP_LOGIN: ${{ secrets.WHMCSMP_LOGIN }}
          WHMCSMP_PASSWORD: ${{ secrets.WHMCSMP_PASSWORD }}
          WHMCSMP_PRODUCTID: ${{ secrets.WHMCSMP_PRODUCTID }}
          WHMCSMP_MINVERSION: ${{ secrets.WHMCSMP_MINVERSION }}
          DEBUG: "semantic-release:whmcs"
        run: npm run coverage
      - name: Upload coverage folder
        uses: actions/upload-artifact@v3
        with:
          name: coverage-folder
          path: coverage

  release:
    name: Release @ NodeJS LTS - x86 - ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' # release when pushing on master branch only
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true
      - name: Install dependencies
        run: npm ci
      - name: Download coverage folder from Push workflow
        uses: actions/download-artifact@v3
        with:
          name: coverage-folder
          path: coverage
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_REPO: ${{ secrets.GH_REPO }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
