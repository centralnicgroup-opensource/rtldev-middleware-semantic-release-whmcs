name: Release
on: [push, pull_request]

jobs:
  test:
    name: Test @ NodeJS - x86 - ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && contains(toJson(github.event.commits), '[skip ci]') == false)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm prune
          npm i
      - name: Linting
        run: npm run lint
      - name: Tests
        env:
          WHMCSMP_LOGIN: ${{ secrets.WHMCSMP_LOGIN }}
          WHMCSMP_PASSWORD: ${{ secrets.WHMCSMP_PASSWORD }}
          WHMCSMP_PRODUCTID: ${{ secrets.WHMCSMP_PRODUCTID_ISPAPI_SSL }}
        run: npm run test
  release:
    name: Release @ NodeJS LTS - x86 - ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: "test"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: |
          npm prune
          npm i
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          WHMCSMP_LOGIN: ${{ secrets.WHMCSMP_LOGIN }}
          WHMCSMP_PASSWORD: ${{ secrets.WHMCSMP_PASSWORD }}
          WHMCSMP_PRODUCTID: ${{ secrets.WHMCSMP_PRODUCTID_ISPAPI_SSL }}
        run: npx semantic-release
